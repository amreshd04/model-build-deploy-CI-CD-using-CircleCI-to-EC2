version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.8.0
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

jobs:
  test_insurance_classifier_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/classification_model/requirements.txt      
      - run:
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/classification_model python3 packages/classification_model/classification_model/train_pipeline.py
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            py.test -vv packages/classification_model/tests

  test_flask_deploy_api:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
      - run:
          name: Runnning tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/ml_api/requirements.txt
            PYTHONPATH=./packages/ml_api:./packages/classification_model
            py.test -vv packages/ml_api/tests -m "not differential"
      - save_cache:
          key: py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
          paths:
            - "/venv"

  train_and_upload_insurance_classifier_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run: 
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/classification_model/requirements.txt      
      - run: 
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/classification_model python3 packages/classification_model/classification_model/train_pipeline.py
      - run: 
          name: Publish model to Gemfury
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            ./scripts/publish_model.sh ./packages/classification_model/

  insurance_classifier_differential_tests:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Capturing previous model predictions
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/diff_test_requirements.txt
            PYTHONPATH=./packages/ml_api python3 packages/ml_api/tests/capture_model_predictions.py
      - run:
          name: Runnning differential tests
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests -m differential

  publish_docker_model_image_to_aws:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publishing Docker Image To Aws ECR
          command: |
            sudo pip install awscli
            eval $(aws ecr get-login --no-include-email --region us-east-2)            
            make build-ml-api-aws tag-ml-api push-ml-api-aws
            aws ecs update-service --cluster ml-api --service custom-service --task-definition  first-run-task-definition --force-new-deployment           

workflows:
  version: 2
  test-insurance-classifier-model:
    jobs:
      - test_insurance_classifier_model
      - test_flask_deploy_api
      - insurance_classifier_differential_tests
      - train_and_upload_insurance_classifier_model:
          requires:
            - test_insurance_classifier_model
            - test_flask_deploy_api
            - insurance_classifier_differential_tests
          filters:
            branches:
              only:
                - master
      - publish_docker_model_image_to_aws:
          requires:
            - train_and_upload_insurance_classifier_model
          filters:
            branches:
              only:
                - master